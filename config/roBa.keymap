#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <28 22>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <28 23>;
        };

        BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <28 24>;
        };

        BT3 {
            bindings = <&none>;
            key-positions = <28 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "parenthesis";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E           &kp R      &mt LEFT_ALT T                                                              &kp Y                &kp U  &kp I     &kp O     &mt RIGHT_ALT P
&kp A             &kp S      &kp D           &kp F      &kp G           &kp LS(CAPSLOCK)           &kp DOT                          &kp H                &kp J  &kp K     &kp L     &kp ENTER
&mt LEFT_SHIFT Z  &kp X      &kp C           &kp V      &kp B           &kp DELETE                 &kp COMMA                        &kp N                &kp M  &mkp MB1  &mkp MB2  &kp MINUS
&kp LEFT_WIN      &kp LCTRL  &kp LEFT_SHIFT  &lt 1 TAB  &lt 2 SPACE     &lt 3 INTERNATIONAL_5      &mt RIGHT_SHIFT INTERNATIONAL_4  &mt RCTRL BACKSPACE                             &kp ESC
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp PERCENT           &kp DOLLAR        &kp LS(NUMBER_6)      &kp EQUAL          &kp SLASH                                      &kp NON_US_BACKSLASH  &kp RIGHT_BRACKET  &kp RS(NON_US_HASH)  &kp LESS_THAN  &kp GREATER_THAN
&kp LEFT_BRACKET      &kp HASH          &kp LS(SINGLE_QUOTE)  &kp LS(SEMICOLON)  &kp LS(MINUS)  &trans         &trans           &kp MINUS             &kp LS(N8)         &kp LS(N9)           &kp SEMICOLON  &kp COLON
&kp LS(LEFT_BRACKET)  &kp LS(EQUAL)     &kp INTERNATIONAL_1   &kp EXCLAMATION    &kp QUESTION   &trans         &trans           &kp PIPE              &kp LEFT_BRACKET   &kp RIGHT_BRACKET    &trans         &kp C_VOLUME_UP
&trans                &kp LS(NUMBER_2)  &kp LS(N7)            &trans             &kp TAB        &kp SPACE      &kp RIGHT_SHIFT  &mt RCTRL DEL                                                                &kp C_VOLUME_DOWN
            >;
        };

        NUM {
            bindings = <
&bt BT_SEL 4    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0                      &trans              &kp HOME        &kp UP_ARROW    &kp END          &kp RIGHT_ALT
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &kp PAGE_UP         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans      &trans  &kp RA(LEFT_ARROW)  &kp RA(RIGHT)   &mkp MB1        &mkp MB2         &mkp MB3
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                               &kp RIGHT_WIN
            >;
        };

        ARROW {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10                      &kp INTERNATIONAL_5  &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp SLASH
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans  &kp NUMBER_0         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH
&trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans  &kp INTERNATIONAL_4  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans  &trans  &trans  &trans  &trans   &trans      &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
